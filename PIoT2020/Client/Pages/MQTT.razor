@page "/MQTT"
@inject Microsoft.JSInterop.IJSRuntime JS
@code {
    ConnectionMQTT connectionMQTTModel = new ConnectionMQTT();


    protected string ConnectionStatus { get; set; }
    protected bool IsDisabled { get; set; }

    public void PublishMessage()
    {
        if (!string.IsNullOrWhiteSpace(connectionMQTTModel.Mensaje))
        {
            JS.Publish(connectionMQTTModel.TopicPublish, connectionMQTTModel.Mensaje);
            connectionMQTTModel.Mensaje = "";
            this.StateHasChanged();
        }
    }

    void Connect()
    {
        IsDisabled = true;
        connectionMQTTModel.Connectado = true;
        JS.CreateClient(connectionMQTTModel.Host, int.Parse(connectionMQTTModel.Port), connectionMQTTModel.ClientID, true);
        this.StateHasChanged();
    }
    void AgregarSuscripcion()
    {

        JS.Subscribe(connectionMQTTModel.TopicSubscribe, 0);
        connectionMQTTModel.Susbscripcions.Insert(0, connectionMQTTModel.TopicSubscribe);
        connectionMQTTModel.TopicSubscribe = "";
    }

    void Publish()
    {
        JS.Publish(connectionMQTTModel.TopicPublish, connectionMQTTModel.Mensaje);
        connectionMQTTModel.Messages.Insert(0, new PayloadData(connectionMQTTModel.TopicPublish, connectionMQTTModel.Mensaje));

    }



    protected async override Task OnInitializedAsync()
    {
        ConnectionStatus = "Not connected";
        if (connectionMQTTModel.Data == null)
        {
            connectionMQTTModel.Data = new List<PayloadData>();
        }
        if (connectionMQTTModel.Susbscripcions == null)
        {
            connectionMQTTModel.Susbscripcions = new List<string>();
        }
        if (connectionMQTTModel.Messages == null)
        {
            connectionMQTTModel.Messages = new List<PayloadData>();
        }

        OnConnectionChanged.Action = value =>
        {
            ConnectionStatus = $"{value}";
            if (value == "Desconnected")
            {
                connectionMQTTModel.Connectado = false;
            }
            else
            {
                connectionMQTTModel.Connectado = true;
            }
            this.StateHasChanged();
        };


        OnMessageReceived.Action = (key, data) =>
        {

            var rabbitDataItem = new PayloadData(key, data);
            connectionMQTTModel.Data.Insert(0, rabbitDataItem);

            this.StateHasChanged();
        };
    }

}
<div class="background-mqtt">
    <h2 class="mqtt" style="margin-left: 100px"><strong>Conexiones PIoT @ConnectionStatus</strong></h2>
    <div class="jumbotron jumbotron-fluid divMqtt">
        <h4 class="tittleDiv">Connect</h4>
        <div class="container">
            <EditForm Model="connectionMQTTModel">
                <div class="row">
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Host</label>
                        </div>
                        <div class="row">
                            <InputText @bind-Value="@connectionMQTTModel.Host" class="input-mqtt" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Port</label>
                        </div>
                        <div class="row">
                            <InputText @bind-Value="@connectionMQTTModel.Port" class="input-mqtt" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Client ID</label>
                        </div>
                        <div class="row">
                            <InputText @bind-Value="@connectionMQTTModel.ClientID" class="input-mqtt" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Username</label>
                        </div>
                        <div class="row">
                            <InputText @bind-Value="@connectionMQTTModel.Username" class="input-mqtt" id="host" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Password</label>
                        </div>
                        <div class="row">
                            <InputText @bind-Value="@connectionMQTTModel.Password" class="input-mqtt" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <label class="switch switch-left-right">
                            <input type="checkbox" value="@connectionMQTTModel.Connectado" @onchange="Connect" class="switch-input" />
                            <span class="switch-label" data-on="On" data-off="Off"></span>
                            <span class="switch-handle"></span>
                        </label>
                    </div>
                </div>
            </EditForm>

        </div>

    </div>
    <div class="jumbotron jumbotron-fluid divMqtt">
        <h4 class="tittleDiv">Subscripciones</h4>
        <div class="container">
            <div class="row">
                <label class="label-mqtt">Topic</label>
            </div>
            <div class="row">
                <EditForm Model="connectionMQTTModel">
                    <InputText class="input-mqtt" type="text" @bind-Value="@connectionMQTTModel.TopicSubscribe" />
                    <button @onclick="AgregarSuscripcion" style="width:150px; margin:0px 0px 0px 20px" class="btn btn-success">Suscribe</button>
                </EditForm>
            </div>
            <div class="row">
                <label class="label-mqtt">Subscripciones activas</label>
            </div>
            <div class="row tableScroll">
                <table class="table table-hover table-dark">
                    <thead>
                        <tr>
                            <th scope="col">Topic</th>
                            <th scope="col">Fecha hora</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in connectionMQTTModel.Susbscripcions)
                        {
                            <tr>
                                <th scope="row">@item</th>
                                <td>@DateTime.Now.ToString("HH:MM:ss")</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>


    <div class="jumbotron jumbotron-fluid divMqtt">
        <h4 class="tittleDiv">Mensajes</h4>
        <div class="container">
            <div class="row">
                <EditForm Model="connectionMQTTModel">
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Topic</label>
                        </div>
                        <div class="row">
                            <InputText class="input-mqtt" @bind-Value="@connectionMQTTModel.TopicPublish" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <div class="row">
                            <label class="label-mqtt">Mensaje</label>
                        </div>
                        <div class="row">
                            <InputText class="input-mqtt" @bind-Value="@connectionMQTTModel.Mensaje" />
                        </div>
                    </div>
                    <div class="col col-sm">
                        <button @onclick="Publish" style="margin:28px 0px 0px 0px; width: 200px;" class="btn btn-success">Enviar</button>
                    </div>
                </EditForm>
            </div>
            <div class="row">
                <div class="col col-sm" style="margin:0px 0px 0px 10px">
                    <div class="row">
                        <label class="label-mqtt">Enviados</label>
                    </div>
                    <div class="row tableScroll">

                        <table class="table table-hover table-dark">
                            <thead>
                                <tr>
                                    <th scope="col">Topic</th>
                                    <th scope="col">Message</th>
                                    <th scope="col">Fecha hora</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in connectionMQTTModel.Messages)
                                {
                                    <tr>
                                        <th scope="row">@item.Topic</th>
                                        <td>@item.Data</td>
                                        <td>@item.Received</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="col col-sm" style="margin:0px 0px 0px 10px">
                    <div class="row">
                        <label class="label-mqtt">Recibidos</label>
                    </div>
                    <div class="row tableScroll">

                        <table class="table table-hover table-dark">
                            <thead>
                                <tr>
                                    <th scope="col">Topic</th>
                                    <th scope="col">Message</th>
                                    <th scope="col">Fecha hora</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in connectionMQTTModel.Data)
                                {
                                    <tr>
                                        <th scope="row">@item.Topic</th>
                                        <td>@item.Data</td>
                                        <td>@item.Received</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>